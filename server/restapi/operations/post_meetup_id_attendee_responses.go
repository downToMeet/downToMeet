// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"go.timothygu.me/downtomeet/server/models"
)

// PostMeetupIDAttendeeOKCode is the HTTP code returned for type PostMeetupIDAttendeeOK
const PostMeetupIDAttendeeOKCode int = 200

/*PostMeetupIDAttendeeOK OK

swagger:response postMeetupIdAttendeeOK
*/
type PostMeetupIDAttendeeOK struct {

	/*
	  In: Body
	*/
	Payload models.AttendeeStatus `json:"body,omitempty"`
}

// NewPostMeetupIDAttendeeOK creates PostMeetupIDAttendeeOK with default headers values
func NewPostMeetupIDAttendeeOK() *PostMeetupIDAttendeeOK {

	return &PostMeetupIDAttendeeOK{}
}

// WithPayload adds the payload to the post meetup Id attendee o k response
func (o *PostMeetupIDAttendeeOK) WithPayload(payload models.AttendeeStatus) *PostMeetupIDAttendeeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post meetup Id attendee o k response
func (o *PostMeetupIDAttendeeOK) SetPayload(payload models.AttendeeStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMeetupIDAttendeeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostMeetupIDAttendeeBadRequestCode is the HTTP code returned for type PostMeetupIDAttendeeBadRequest
const PostMeetupIDAttendeeBadRequestCode int = 400

/*PostMeetupIDAttendeeBadRequest Bad Request

swagger:response postMeetupIdAttendeeBadRequest
*/
type PostMeetupIDAttendeeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostMeetupIDAttendeeBadRequest creates PostMeetupIDAttendeeBadRequest with default headers values
func NewPostMeetupIDAttendeeBadRequest() *PostMeetupIDAttendeeBadRequest {

	return &PostMeetupIDAttendeeBadRequest{}
}

// WithPayload adds the payload to the post meetup Id attendee bad request response
func (o *PostMeetupIDAttendeeBadRequest) WithPayload(payload *models.Error) *PostMeetupIDAttendeeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post meetup Id attendee bad request response
func (o *PostMeetupIDAttendeeBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMeetupIDAttendeeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostMeetupIDAttendeeForbiddenCode is the HTTP code returned for type PostMeetupIDAttendeeForbidden
const PostMeetupIDAttendeeForbiddenCode int = 403

/*PostMeetupIDAttendeeForbidden Forbidden

swagger:response postMeetupIdAttendeeForbidden
*/
type PostMeetupIDAttendeeForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostMeetupIDAttendeeForbidden creates PostMeetupIDAttendeeForbidden with default headers values
func NewPostMeetupIDAttendeeForbidden() *PostMeetupIDAttendeeForbidden {

	return &PostMeetupIDAttendeeForbidden{}
}

// WithPayload adds the payload to the post meetup Id attendee forbidden response
func (o *PostMeetupIDAttendeeForbidden) WithPayload(payload *models.Error) *PostMeetupIDAttendeeForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post meetup Id attendee forbidden response
func (o *PostMeetupIDAttendeeForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMeetupIDAttendeeForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostMeetupIDAttendeeNotFoundCode is the HTTP code returned for type PostMeetupIDAttendeeNotFound
const PostMeetupIDAttendeeNotFoundCode int = 404

/*PostMeetupIDAttendeeNotFound Not found

swagger:response postMeetupIdAttendeeNotFound
*/
type PostMeetupIDAttendeeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostMeetupIDAttendeeNotFound creates PostMeetupIDAttendeeNotFound with default headers values
func NewPostMeetupIDAttendeeNotFound() *PostMeetupIDAttendeeNotFound {

	return &PostMeetupIDAttendeeNotFound{}
}

// WithPayload adds the payload to the post meetup Id attendee not found response
func (o *PostMeetupIDAttendeeNotFound) WithPayload(payload *models.Error) *PostMeetupIDAttendeeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post meetup Id attendee not found response
func (o *PostMeetupIDAttendeeNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMeetupIDAttendeeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
