// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"go.timothygu.me/downtomeet/server/models"
)

// GetMeetupRemoteOKCode is the HTTP code returned for type GetMeetupRemoteOK
const GetMeetupRemoteOKCode int = 200

/*GetMeetupRemoteOK OK

swagger:response getMeetupRemoteOK
*/
type GetMeetupRemoteOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Meetup `json:"body,omitempty"`
}

// NewGetMeetupRemoteOK creates GetMeetupRemoteOK with default headers values
func NewGetMeetupRemoteOK() *GetMeetupRemoteOK {

	return &GetMeetupRemoteOK{}
}

// WithPayload adds the payload to the get meetup remote o k response
func (o *GetMeetupRemoteOK) WithPayload(payload []*models.Meetup) *GetMeetupRemoteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get meetup remote o k response
func (o *GetMeetupRemoteOK) SetPayload(payload []*models.Meetup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMeetupRemoteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Meetup, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMeetupRemoteBadRequestCode is the HTTP code returned for type GetMeetupRemoteBadRequest
const GetMeetupRemoteBadRequestCode int = 400

/*GetMeetupRemoteBadRequest Bad Request

swagger:response getMeetupRemoteBadRequest
*/
type GetMeetupRemoteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMeetupRemoteBadRequest creates GetMeetupRemoteBadRequest with default headers values
func NewGetMeetupRemoteBadRequest() *GetMeetupRemoteBadRequest {

	return &GetMeetupRemoteBadRequest{}
}

// WithPayload adds the payload to the get meetup remote bad request response
func (o *GetMeetupRemoteBadRequest) WithPayload(payload *models.Error) *GetMeetupRemoteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get meetup remote bad request response
func (o *GetMeetupRemoteBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMeetupRemoteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
