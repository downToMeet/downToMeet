// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"go.timothygu.me/downtomeet/server/models"
)

// GetRestrictedOKCode is the HTTP code returned for type GetRestrictedOK
const GetRestrictedOKCode int = 200

/*GetRestrictedOK OK

swagger:response getRestrictedOK
*/
type GetRestrictedOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetRestrictedOK creates GetRestrictedOK with default headers values
func NewGetRestrictedOK() *GetRestrictedOK {

	return &GetRestrictedOK{}
}

// WithPayload adds the payload to the get restricted o k response
func (o *GetRestrictedOK) WithPayload(payload string) *GetRestrictedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get restricted o k response
func (o *GetRestrictedOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRestrictedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetRestrictedUnauthorizedCode is the HTTP code returned for type GetRestrictedUnauthorized
const GetRestrictedUnauthorizedCode int = 401

/*GetRestrictedUnauthorized Not authenticated

swagger:response getRestrictedUnauthorized
*/
type GetRestrictedUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRestrictedUnauthorized creates GetRestrictedUnauthorized with default headers values
func NewGetRestrictedUnauthorized() *GetRestrictedUnauthorized {

	return &GetRestrictedUnauthorized{}
}

// WithPayload adds the payload to the get restricted unauthorized response
func (o *GetRestrictedUnauthorized) WithPayload(payload *models.Error) *GetRestrictedUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get restricted unauthorized response
func (o *GetRestrictedUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRestrictedUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
