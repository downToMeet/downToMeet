// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AttendeeStatus attendee status
//
// swagger:model attendeeStatus
type AttendeeStatus string

const (

	// AttendeeStatusAttending captures enum value "attending"
	AttendeeStatusAttending AttendeeStatus = "attending"

	// AttendeeStatusPending captures enum value "pending"
	AttendeeStatusPending AttendeeStatus = "pending"

	// AttendeeStatusRejected captures enum value "rejected"
	AttendeeStatusRejected AttendeeStatus = "rejected"

	// AttendeeStatusNone captures enum value "none"
	AttendeeStatusNone AttendeeStatus = "none"
)

// for schema
var attendeeStatusEnum []interface{}

func init() {
	var res []AttendeeStatus
	if err := json.Unmarshal([]byte(`["attending","pending","rejected","none"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		attendeeStatusEnum = append(attendeeStatusEnum, v)
	}
}

func (m AttendeeStatus) validateAttendeeStatusEnum(path, location string, value AttendeeStatus) error {
	if err := validate.EnumCase(path, location, value, attendeeStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this attendee status
func (m AttendeeStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAttendeeStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
