swagger: "2.0"
info:
  title: Internal DownToMeet API
  version: 1.0.0
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http

definitions:
  error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  userID:
    type: string
  meetupID:
    type: string
  coordinates:
    type: object
    properties: 
      lat:
        type: number
        minimum: -90
        maximum: 90
      lon:
        type: number
        minimum: -180
        maximum: 180
  user:
    type: object
    required:
      - id
    properties:
      id:
        $ref: "#/definitions/userID"
      name:
        type: string
      interests:
        type: array
        items: 
          type: string
      coordinates:
        $ref: "#/definitions/coordinates"
      pendingApproval:
        type: array
        items: 
          $ref: "#/definitions/meetupID"
      attending:
        type: array
        items: 
          $ref: "#/definitions/meetupID"
      ownedMeetups:
        type: array
        items: 
          $ref: "#/definitions/meetupID"
      contactInfo:
        type: string

securityDefinitions:
  cookieSession:
    description: |
      Session stored in a cookie.

      (If you're reading this in the API documentation, ignore the
      "query parameter name" below. It is ignored at runtime.)
    name: COOKIE
    type: apiKey
    in: query

paths:
  /hello:
    parameters:
      - name: id
        in: query
        type: string
        description: A sample parameter.
    get:
      summary: Get a hello world message
      description: |
        If id is "error", an error response is returned.

        This is a dummy endpoint for testing purposes. It should be removed soon.
      deprecated: true
      responses:
        200:
          description: successful hello world response
          schema:
            type: object
            properties:
              hello:
                type: string
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /user/me:
    get:
      summary: Get the current user's information
      description: If user is not logged in, an error response is returned.
      security:
        - cookieSession: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/error"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/error"
  /user/{id}:
    parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the desired user
    get:
      summary: Get the specified user's information
      description: If specified user does not exist, an error is returned.
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/error"
    patch:
      summary: Patch the specified user
      description: |
        If specified user does not exist or current user is not the specified
        user, an error is returned.
      security:
        - cookieSession: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
        403:
          description: Forbidden
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/error"
  /user/facebook/redirect:
    get:
      parameters:
        - name: code
          in: query
          type: string
          description: Authorization code from Facebook
      summary: Facebook OAuth redirect
      description: If authentication fails, the user is not logged in.
      responses:
        303:
          description: Redirect to home page.
          headers:
            Location:
              type: string
              description: Redirect URL

  /set-cookie:
    get:
      summary: Set cookie session
      description: |
        This is a sample endpoint that simulates the action of logging in. After
        a successful call to this endpoint, one should then be able to go to
        /restricted and receive a message about who they are logged in as.

        This is a dummy endpoint for testing purposes. It should be removed soon.
      deprecated: true
      parameters:
        - name: user_id
          in: query
          type: string
          description: User ID to set
      produces:
        - text/plain
      responses:
        200:
          description: OK
          headers:
            Set-Cookie:
              type: string
          schema:
            type: string
  /restricted:
    get:
      summary: Restricted endpoint
      description: |
        This is a sample endpoint that is restricted only to users who are
        "logged in".

        This is a dummy endpoint for testing purposes. It should be removed soon.
      deprecated: true
      security:
        - cookieSession: []
      produces:
        - text/plain
      responses:
        200:
          description: OK
          schema:
            type: string
        401:
          description: Not authenticated
          schema:
            $ref: "#/definitions/error"
